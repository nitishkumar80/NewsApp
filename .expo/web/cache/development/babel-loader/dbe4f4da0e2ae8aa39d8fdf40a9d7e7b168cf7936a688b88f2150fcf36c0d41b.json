{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport Toast from \"react-native-toast-message\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var navigation = useNavigation();\n  var isFocused = useIsFocused();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var animationValue = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    if (isFocused) {\n      setUsername(\"\");\n      setPassword(\"\");\n      resetAnimation();\n    }\n  }, [isFocused]);\n  var mockDatabaseCheck = {\n    username: \"nitish\",\n    password: \"1234567\"\n  };\n  var showToastSuccess = function showToastSuccess(username) {\n    Toast.show({\n      type: 'success',\n      text1: `Welcome to home , ${username}`,\n      visibilityTime: 3000,\n      autoHide: true\n    });\n  };\n  var showToastError = function showToastError() {\n    Toast.show({\n      type: 'error',\n      text1: 'Username and password do not match',\n      visibilityTime: 3000,\n      autoHide: true\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n  var handleUsernameChange = function handleUsernameChange(text) {\n    setUsername(text);\n  };\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n  };\n  var handleLogIn = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (username === mockDatabaseCheck.username && password === mockDatabaseCheck.password) {\n        animateSuccess();\n        setTimeout(function () {\n          showToastSuccess(username);\n          navigation.navigate(\"Home\");\n        }, 1000);\n      } else {\n        showToastError();\n      }\n    });\n    return function handleLogIn() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var animateSuccess = function animateSuccess() {\n    Animated.timing(animationValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true\n    }).start();\n  };\n  var resetAnimation = function resetAnimation() {\n    Animated.timing(animationValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: true\n    }).start();\n  };\n  var animatedStyle = {\n    transform: [{\n      translateY: animationValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [100, 0]\n      })\n    }]\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../assets/login0.png\"),\n      style: {\n        width: 355,\n        height: 200\n      },\n      resizeMode: \"cover\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      onChangeText: handleUsernameChange,\n      value: username,\n      autoCapitalize: \"none\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      onChangeText: handlePasswordChange,\n      value: password,\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogIn,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsx(Animated.View, {\n      style: [styles.animationContainer, animatedStyle],\n      children: _jsx(Text, {\n        style: styles.animationText,\n        children: \"Login Successful!\"\n      })\n    }), _jsxs(Text, {\n      style: styles.user,\n      children: [\"username: nitish\", _jsx(\"br\", {}), \"password:1234567\"]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20\n  },\n  input: {\n    height: 40,\n    width: \"100%\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    borderRadius: 5\n  },\n  button: {\n    backgroundColor: \"orange\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginTop: 30,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 18\n  },\n  user: {\n    marginVertical: 80\n  },\n  animationContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"green\",\n    padding: 20,\n    alignItems: \"center\"\n  },\n  animationText: {\n    color: \"#fff\",\n    fontSize: 18\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigation","useIsFocused","Toast","View","Image","TextInput","Text","TouchableOpacity","StyleSheet","Animated","jsx","_jsx","jsxs","_jsxs","LoginScreen","navigation","isFocused","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","animationValue","Value","current","resetAnimation","mockDatabaseCheck","showToastSuccess","show","type","text1","visibilityTime","autoHide","showToastError","handleUsernameChange","text","handlePasswordChange","handleLogIn","_ref","_asyncToGenerator","animateSuccess","setTimeout","navigate","apply","arguments","timing","toValue","duration","useNativeDriver","start","animatedStyle","transform","translateY","interpolate","inputRange","outputRange","style","styles","container","children","source","require","width","height","resizeMode","input","placeholder","onChangeText","value","autoCapitalize","secureTextEntry","onPress","button","buttonText","animationContainer","animationText","user","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","borderColor","borderWidth","marginBottom","borderRadius","paddingVertical","marginTop","color","fontSize","marginVertical","position","bottom","left","right","padding"],"sources":["/Users/nitish/NewsApp/component/LoginScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport Toast from \"react-native-toast-message\";\nimport {\n  View,\n  Image,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Animated,\n} from \"react-native\";\n\nconst LoginScreen = () => {\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const animationValue = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Reset form fields and animation when navigating back to login screen\n    if (isFocused) {\n      setUsername(\"\");\n      setPassword(\"\");\n      resetAnimation();\n    }\n  }, [isFocused]);\n\n  const mockDatabaseCheck = { username: \"nitish\", password: \"1234567\" };\n\n  const showToastSuccess = (username) => {\n    Toast.show({\n      type: 'success',\n      text1: `Welcome to home , ${username}`,\n      visibilityTime: 3000,\n      autoHide: true,\n    });\n  };\n\n  const showToastError = () => {\n    Toast.show({\n      type: 'error',\n      text1: 'Username and password do not match',\n      visibilityTime: 3000,\n      autoHide: true,\n    });\n    // Reset form fields on login failure\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n  };\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n  };\n\n  const handleLogIn = async () => {\n    if (username === mockDatabaseCheck.username && password === mockDatabaseCheck.password) {\n      animateSuccess(); // Trigger success animation\n      setTimeout(() => {\n        showToastSuccess(username);\n        navigation.navigate(\"Home\");\n      }, 1000); // Adjust this timing based on your animation duration\n    } else {\n      showToastError();\n    }\n  };\n\n  const animateSuccess = () => {\n    Animated.timing(animationValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const resetAnimation = () => {\n    Animated.timing(animationValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const animatedStyle = {\n    transform: [\n      {\n        translateY: animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [100, 0],\n        }),\n      },\n    ],\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/login0.png\")}\n        // style={styles.logo}\n        style={{ width: 355, height: 200 }}\n        resizeMode='cover'\n\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        onChangeText={handleUsernameChange}\n        value={username}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        onChangeText={handlePasswordChange}\n        value={password}\n        secureTextEntry={true}\n      />\n      <TouchableOpacity onPress={handleLogIn} style={styles.button}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <Animated.View style={[styles.animationContainer, animatedStyle]}>\n        <Text style={styles.animationText}>Login Successful!</Text>\n      </Animated.View>\n\n      <Text style={styles.user}>\n        username: nitish\n        <br/>\n        password:1234567\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n  },\n  input: {\n    height: 40,\n    width: \"100%\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  button: {\n    backgroundColor: \"orange\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginTop: 30,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n  user: {\n   marginVertical:80,\n   \n  },\n  animationContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"green\",\n    padding: 20,\n    alignItems: \"center\",\n  },\n  animationText: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}