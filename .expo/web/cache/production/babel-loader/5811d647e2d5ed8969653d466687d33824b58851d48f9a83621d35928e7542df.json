{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import axios from'axios';import React,{useState,useRef,useEffect,form}from\"react\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Toast from'react-native-toast-message';import{useNavigation,useIsFocused}from\"@react-navigation/native\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignupScreen=function SignupScreen(){var navigation=useNavigation();var isFocused=useIsFocused();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),phone=_useState6[0],setPhone=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),repassword=_useState10[0],setRepassword=_useState10[1];var animationValue=useRef(new Animated.Value(0)).current;useEffect(function(){if(isFocused){resetAnimation();}},[isFocused]);var handleSignup=function handleSignup(){if(!name||!email||!phone||!password||!repassword){showToastError(\"Please fill in all fields\");return;}if(password!==repassword){showToastError(\"Passwords do not match\");return;}if(!validateEmail(email)){showToastError(\"Invalid email format\");return;}simulateSignup();};var simulateSignup=function simulateSignup(){showToastSuccess();animateSuccess();};var showToastSuccess=function showToastSuccess(){Toast.show({type:'success',text1:'Signup Successful!',text2:`Welcome, ${name}!`,visibilityTime:3000,autoHide:true,onHide:function onHide(){resetForm();navigation.navigate(\"LoginScreen\");}});};var showToastError=function showToastError(message){Toast.show({type:'error',text1:'Error',text2:message,visibilityTime:2000,autoHide:true});};var resetForm=function resetForm(){setName(\"\");setEmail(\"\");setPhone(\"\");setPassword(\"\");setRepassword(\"\");};var validateEmail=function validateEmail(email){var emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;return emailRegex.test(email);};var animateSuccess=function animateSuccess(){Animated.timing(animationValue,{toValue:1,duration:1000,useNativeDriver:true}).start();};var resetAnimation=function resetAnimation(){Animated.timing(animationValue,{toValue:0,duration:0,useNativeDriver:true}).start();};var animatedStyle={transform:[{translateY:animationValue.interpolate({inputRange:[0,1],outputRange:[100,0]})}]};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.heading,children:\"Create Account ...\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Name\",value:name,onChangeText:function onChangeText(text){return setName(text);}}),_jsx(TextInput,{style:styles.input,placeholder:\"Email\",keyboardType:\"email-address\",value:email,onChangeText:function onChangeText(text){return setEmail(text);}}),_jsx(TextInput,{style:styles.input,placeholder:\"Phone Number\",keyboardType:\"phone-pad\",value:phone,onChangeText:function onChangeText(text){return setPhone(text);}}),_jsx(TextInput,{style:styles.input,placeholder:\"Password\",secureTextEntry:true,value:password,onChangeText:function onChangeText(text){return setPassword(text);}}),_jsx(TextInput,{style:styles.input,placeholder:\"Re-enter Password\",secureTextEntry:true,value:repassword,onChangeText:function onChangeText(text){return setRepassword(text);}}),_jsx(TouchableOpacity,{style:styles.buttonContainer,onPress:handleSignup,children:_jsx(Text,{style:styles.btnText,children:\"Sign Up\"})}),_jsx(Animated.View,{style:[styles.animationContainer,animatedStyle],children:_jsx(Text,{style:styles.animationText,children:\"Signup Successful!\"})})]});};var styles=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\",padding:20,backgroundColor:\"#fff\"},heading:{fontSize:24,color:\"orange\",fontWeight:\"bold\",marginBottom:20},input:{width:\"100%\",marginBottom:20,paddingVertical:10,paddingHorizontal:15,borderWidth:1,borderColor:\"#ccc\",borderRadius:8,backgroundColor:\"#f9f9f9\"},buttonContainer:{width:\"100%\",marginTop:10,borderRadius:8,overflow:\"hidden\",backgroundColor:\"orange\",alignItems:\"center\",padding:15},btnText:{color:\"#fff\",fontSize:18,fontWeight:\"bold\"},animationContainer:{position:\"absolute\",bottom:0,left:0,right:0,backgroundColor:\"green\",padding:20,alignItems:\"center\"},animationText:{color:\"#fff\",fontSize:18}});export default SignupScreen;","map":{"version":3,"names":["axios","React","useState","useRef","useEffect","form","View","TouchableOpacity","TextInput","Text","StyleSheet","Animated","Toast","useNavigation","useIsFocused","jsx","_jsx","jsxs","_jsxs","SignupScreen","navigation","isFocused","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","phone","setPhone","_useState7","_useState8","password","setPassword","_useState9","_useState10","repassword","setRepassword","animationValue","Value","current","resetAnimation","handleSignup","showToastError","validateEmail","simulateSignup","showToastSuccess","animateSuccess","show","type","text1","text2","visibilityTime","autoHide","onHide","resetForm","navigate","message","emailRegex","test","timing","toValue","duration","useNativeDriver","start","animatedStyle","transform","translateY","interpolate","inputRange","outputRange","style","styles","container","children","heading","input","placeholder","value","onChangeText","text","keyboardType","secureTextEntry","buttonContainer","onPress","btnText","animationContainer","animationText","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","color","fontWeight","marginBottom","width","paddingVertical","paddingHorizontal","borderWidth","borderColor","borderRadius","marginTop","overflow","position","bottom","left","right"],"sources":["/Users/nitish/NewsApp/component/SignupScreen.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { View, TouchableOpacity, TextInput, Text, StyleSheet } from \"react-native\";\n// import Toast from 'react-native-toast-message';\n// import { useNavigation } from \"@react-navigation/native\";\n\n// const SignupScreen = () => {\n//   const navigation = useNavigation();\n//   const [name, setName] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [phone, setPhone] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [repassword, setRepassword] = useState(\"\");\n\n//   const handleSignup = () => {\n//     if (!name || !email || !phone || !password || !repassword) {\n//       showToastError(\"Please fill in all fields\");\n//       return;\n//     }\n\n//     if (password !== repassword) {\n//       showToastError(\"Passwords do not match\");\n//       return;\n//     }\n\n//     if (!validateEmail(email)) {\n//       showToastError(\"Invalid email format\");\n//       return;\n//     }\n\n//     simulateSignup();\n//   };\n\n//   const simulateSignup = () => {\n//     showToastSuccess();\n//   };\n\n//   const showToastSuccess = () => {\n//     Toast.show({\n//       type: 'success',\n//       text1: 'Signup Successful!',\n//       text2: `Welcome, ${name}!`,\n//       visibilityTime: 3000,\n//       autoHide: true,\n//       onHide: () => {\n//         resetForm();\n//         navigation.navigate(\"Login\");\n//       },\n//     });\n//   };\n\n//   const showToastError = (message) => {\n//     Toast.show({\n//       type: 'error',\n//       text1: 'Error',\n//       text2: message,\n//       visibilityTime: 2000,\n//       autoHide: true,\n//     });\n//   };\n\n//   const resetForm = () => {\n//     setName(\"\");\n//     setEmail(\"\");\n//     setPhone(\"\");\n//     setPassword(\"\");\n//     setRepassword(\"\");\n//   };\n\n//   const validateEmail = (email) => {\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return emailRegex.test(email);\n//   };\n\n//   return (\n//     <View style={styles.container}>\n//       <Text style={styles.heading}>Create Account ...</Text>\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Name\"\n//         value={name}\n//         onChangeText={(text) => setName(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Email\"\n//         keyboardType=\"email-address\"\n//         value={email}\n//         onChangeText={(text) => setEmail(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Phone Number\"\n//         keyboardType=\"phone-pad\"\n//         value={phone}\n//         onChangeText={(text) => setPhone(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Password\"\n//         secureTextEntry={true}\n//         value={password}\n//         onChangeText={(text) => setPassword(text)}\n//       />\n//       <TextInput\n//         style={styles.input}\n//         placeholder=\"Re-enter Password\"\n//         secureTextEntry={true}\n//         value={repassword}\n//         onChangeText={(text) => setRepassword(text)}\n//       />\n//       <TouchableOpacity style={styles.buttonContainer} onPress={handleSignup}>\n//         <Text style={styles.btnText}>Sign Up</Text>\n//       </TouchableOpacity>\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     padding: 20,\n//     backgroundColor: \"#fff\",\n//   },\n//   heading: {\n//     fontSize: 24,\n//     color: \"orange\",\n//     fontWeight: \"bold\",\n//     marginBottom: 20,\n//   },\n//   input: {\n//     width: \"100%\",\n//     marginBottom: 20,\n//     paddingVertical: 10,\n//     paddingHorizontal: 15,\n//     borderWidth: 1,\n//     borderColor: \"#ccc\",\n//     borderRadius: 8,\n//     backgroundColor: \"#f9f9f9\",\n//   },\n//   buttonContainer: {\n//     width: \"100%\",\n//     marginTop: 10,\n//     borderRadius: 8,\n//     overflow: \"hidden\",\n//     backgroundColor: \"orange\",\n//     alignItems: \"center\",\n//     padding: 15,\n//   },\n//   btnText: {\n//     color: \"#fff\",\n//     fontSize: 18,\n//     fontWeight: \"bold\",\n//   },\n// });\n\n// export default SignupScreen;\n\n\n\n\nimport axios from 'axios';\n\nimport React, { useState, useRef, useEffect , form } from \"react\";\nimport { View, TouchableOpacity, TextInput, Text, StyleSheet, Animated } from \"react-native\";\nimport Toast from 'react-native-toast-message';\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\n\nconst SignupScreen = () => {\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repassword, setRepassword] = useState(\"\");\n  const animationValue = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    if (isFocused) {\n      resetAnimation();\n    }\n  }, [isFocused]);\n\n  const handleSignup = () => {\n    if (!name || !email || !phone || !password || !repassword) {\n      showToastError(\"Please fill in all fields\");\n      return;\n    }\n\n    if (password !== repassword) {\n      showToastError(\"Passwords do not match\");\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      showToastError(\"Invalid email format\");\n      return;\n    }\n\n    simulateSignup();\n  };\n  // const handleSignup = async () => {\n  //   // Existing form validation logic...\n  \n  //   try {\n  //     const response = await axios.post('http://localhost:3000/signup', {\n  //       name,\n  //       email,\n  //       phone,\n  //       password,\n  //     });\n  \n  //     if (response.status === 200) {\n  //       // Successful response handling (e.g., show success message)\n  //       showToastSuccess();\n  //       animateSuccess();\n  //     }\n  //   } catch (error) {\n  //     // Error handling (e.g., show error message)\n  //     showToastError(\"Failed to signup. Please try again.\");\n  //     console.error('Signup Error:', error);\n  //   }\n  // };\n  const simulateSignup = () => {\n    showToastSuccess();\n    animateSuccess(); // Trigger success animation\n  };\n\n  const showToastSuccess = () => {\n    Toast.show({\n      type: 'success',\n      text1: 'Signup Successful!',\n      text2: `Welcome, ${name}!`,\n      visibilityTime: 3000,\n      autoHide: true,\n      onHide: () => {\n        resetForm();\n        navigation.navigate(\"LoginScreen\");\n      },\n    });\n  };\n\n  const showToastError = (message) => {\n    Toast.show({\n      type: 'error',\n      text1: 'Error',\n      text2: message,\n      visibilityTime: 2000,\n      autoHide: true,\n    });\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setPassword(\"\");\n    setRepassword(\"\");\n  };\n\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const animateSuccess = () => {\n    Animated.timing(animationValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const resetAnimation = () => {\n    Animated.timing(animationValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const animatedStyle = {\n    transform: [\n      {\n        translateY: animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [100, 0],\n        }),\n      },\n    ],\n  };\n\n  return (\n    <View style={styles.container}>\n   \n      <Text style={styles.heading}>Create Account ...</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Name\"\n        value={name}\n        onChangeText={(text) => setName(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        keyboardType=\"email-address\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Phone Number\"\n        keyboardType=\"phone-pad\"\n        value={phone}\n        onChangeText={(text) => setPhone(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Re-enter Password\"\n        secureTextEntry={true}\n        value={repassword}\n        onChangeText={(text) => setRepassword(text)}\n      />\n      <TouchableOpacity style={styles.buttonContainer} onPress={handleSignup}>\n        <Text style={styles.btnText}>Sign Up</Text>\n      </TouchableOpacity>\n\n      <Animated.View style={[styles.animationContainer, animatedStyle]}>\n        <Text style={styles.animationText}>Signup Successful!</Text>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    backgroundColor: \"#fff\",\n  },\n  heading: {\n    fontSize: 24,\n    color: \"orange\",\n    fontWeight: \"bold\",\n    marginBottom: 20,\n  },\n  input: {\n    width: \"100%\",\n    marginBottom: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 8,\n    backgroundColor: \"#f9f9f9\",\n  },\n  buttonContainer: {\n    width: \"100%\",\n    marginTop: 10,\n    borderRadius: 8,\n    overflow: \"hidden\",\n    backgroundColor: \"orange\",\n    alignItems: \"center\",\n    padding: 15,\n  },\n  btnText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  animationContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"green\",\n    padding: 20,\n    alignItems: \"center\",\n  },\n  animationText: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n});\n\nexport default SignupScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}