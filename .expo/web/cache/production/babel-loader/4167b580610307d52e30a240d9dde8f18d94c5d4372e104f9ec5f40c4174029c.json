{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import{useNavigation,useIsFocused}from\"@react-navigation/native\";import Toast from\"react-native-toast-message\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginScreen=function LoginScreen(){var navigation=useNavigation();var isFocused=useIsFocused();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var animationValue=useRef(new Animated.Value(0)).current;useEffect(function(){if(isFocused){setUsername(\"\");setPassword(\"\");resetAnimation();}},[isFocused]);var mockDatabaseCheck={username:\"nitish\",password:\"1234567\"};var showToastSuccess=function showToastSuccess(username){Toast.show({type:'success',text1:`Welcome to home , ${username}`,visibilityTime:3000,autoHide:true});};var showToastError=function showToastError(){Toast.show({type:'error',text1:'Username and password do not match',visibilityTime:3000,autoHide:true});setUsername(\"\");setPassword(\"\");};var handleUsernameChange=function handleUsernameChange(text){setUsername(text);};var handlePasswordChange=function handlePasswordChange(text){setPassword(text);};var handleLogIn=function(){var _ref=_asyncToGenerator(function*(){if(username===mockDatabaseCheck.username&&password===mockDatabaseCheck.password){animateSuccess();setTimeout(function(){showToastSuccess(username);navigation.navigate(\"Home\");},1000);}else{showToastError();}});return function handleLogIn(){return _ref.apply(this,arguments);};}();var animateSuccess=function animateSuccess(){Animated.timing(animationValue,{toValue:1,duration:1000,useNativeDriver:true}).start();};var resetAnimation=function resetAnimation(){Animated.timing(animationValue,{toValue:0,duration:0,useNativeDriver:true}).start();};var animatedStyle={transform:[{translateY:animationValue.interpolate({inputRange:[0,1],outputRange:[100,0]})}]};return _jsxs(View,{style:styles.container,children:[_jsx(Image,{source:require(\"../assets/login0.png\"),style:styles.logo,resizeMode:\"contain\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Username\",onChangeText:handleUsernameChange,value:username,autoCapitalize:\"none\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Password\",onChangeText:handlePasswordChange,value:password,secureTextEntry:true}),_jsx(TouchableOpacity,{onPress:handleLogIn,style:styles.button,children:_jsx(Text,{style:styles.buttonText,children:\"Login\"})}),_jsx(Animated.View,{style:[styles.animationContainer,animatedStyle],children:_jsx(Text,{style:styles.animationText,children:\"Login Successful!\"})})]});};var styles=StyleSheet.create({container:{flex:1,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#fff\",paddingHorizontal:20},input:{height:40,width:\"100%\",borderColor:\"#ccc\",borderWidth:1,marginBottom:20,paddingHorizontal:10,borderRadius:5},button:{backgroundColor:\"orange\",paddingHorizontal:20,paddingVertical:10,marginTop:30,borderRadius:5},buttonText:{color:\"#fff\",fontSize:18},logo:{height:130,marginTop:-123},animationContainer:{position:\"absolute\",bottom:0,left:0,right:0,backgroundColor:\"green\",padding:20,alignItems:\"center\"},animationText:{color:\"#fff\",fontSize:18}});export default LoginScreen;","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigation","useIsFocused","Toast","View","Image","TextInput","Text","TouchableOpacity","StyleSheet","Animated","jsx","_jsx","jsxs","_jsxs","LoginScreen","navigation","isFocused","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","animationValue","Value","current","resetAnimation","mockDatabaseCheck","showToastSuccess","show","type","text1","visibilityTime","autoHide","showToastError","handleUsernameChange","text","handlePasswordChange","handleLogIn","_ref","_asyncToGenerator","animateSuccess","setTimeout","navigate","apply","arguments","timing","toValue","duration","useNativeDriver","start","animatedStyle","transform","translateY","interpolate","inputRange","outputRange","style","styles","container","children","source","require","logo","resizeMode","input","placeholder","onChangeText","value","autoCapitalize","secureTextEntry","onPress","button","buttonText","animationContainer","animationText","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","height","width","borderColor","borderWidth","marginBottom","borderRadius","paddingVertical","marginTop","color","fontSize","position","bottom","left","right","padding"],"sources":["/Users/nitish/NewsApp/component/LoginScreen.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigation, useIsFocused } from \"@react-navigation/native\";\nimport Toast from \"react-native-toast-message\";\nimport {\n  View,\n  Image,\n  TextInput,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Animated,\n} from \"react-native\";\n\nconst LoginScreen = () => {\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const animationValue = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Reset form fields and animation when navigating back to login screen\n    if (isFocused) {\n      setUsername(\"\");\n      setPassword(\"\");\n      resetAnimation();\n    }\n  }, [isFocused]);\n\n  const mockDatabaseCheck = { username: \"nitish\", password: \"1234567\" };\n\n  const showToastSuccess = (username) => {\n    Toast.show({\n      type: 'success',\n      text1: `Welcome to home , ${username}`,\n      visibilityTime: 3000,\n      autoHide: true,\n    });\n  };\n\n  const showToastError = () => {\n    Toast.show({\n      type: 'error',\n      text1: 'Username and password do not match',\n      visibilityTime: 3000,\n      autoHide: true,\n    });\n    // Reset form fields on login failure\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n  };\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n  };\n\n  const handleLogIn = async () => {\n    if (username === mockDatabaseCheck.username && password === mockDatabaseCheck.password) {\n      animateSuccess(); // Trigger success animation\n      setTimeout(() => {\n        showToastSuccess(username);\n        navigation.navigate(\"Home\");\n      }, 1000); // Adjust this timing based on your animation duration\n    } else {\n      showToastError();\n    }\n  };\n\n  const animateSuccess = () => {\n    Animated.timing(animationValue, {\n      toValue: 1,\n      duration: 1000,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const resetAnimation = () => {\n    Animated.timing(animationValue, {\n      toValue: 0,\n      duration: 0,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const animatedStyle = {\n    transform: [\n      {\n        translateY: animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [100, 0],\n        }),\n      },\n    ],\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/login0.png\")}\n        style={styles.logo}\n        resizeMode=\"contain\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        onChangeText={handleUsernameChange}\n        value={username}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        onChangeText={handlePasswordChange}\n        value={password}\n        secureTextEntry={true}\n      />\n      <TouchableOpacity onPress={handleLogIn} style={styles.button}>\n        <Text style={styles.buttonText}>Login</Text>\n      </TouchableOpacity>\n      <Animated.View style={[styles.animationContainer, animatedStyle]}>\n        <Text style={styles.animationText}>Login Successful!</Text>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    paddingHorizontal: 20,\n  },\n  input: {\n    height: 40,\n    width: \"100%\",\n    borderColor: \"#ccc\",\n    borderWidth: 1,\n    marginBottom: 20,\n    paddingHorizontal: 10,\n    borderRadius: 5,\n  },\n  button: {\n    backgroundColor: \"orange\",\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    marginTop: 30,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n  logo: {\n    height: 130,\n    marginTop: -123,\n  },\n  animationContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"green\",\n    padding: 20,\n    alignItems: \"center\",\n  },\n  animationText: {\n    color: \"#fff\",\n    fontSize: 18,\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}